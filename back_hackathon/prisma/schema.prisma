// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  firstname     String
  lastname      String
  password      String
  email         String     @unique
  role          Role
  tasks         UserTask[]
  jobApplied    JobApplication[]
}

model JobOffer {
  id                Int        @id @default(autoincrement())
  title             String
  description       String
  tasks             JobTask[]
  jobApplication    JobApplication[]
}

model Task {
  id              Int       @id @default(autoincrement())
  description     String
  difficultyLevel Int
  jobTasks        JobTask[]
  userTasks       UserTask[]
}

model JobApplication {
  userId          Int
  jobOfferId      Int
  user            User        @relation(fields: [userId], references: [id])
  jobOffer        JobOffer    @relation(fields: [jobOfferId], references: [id])
  @@id([userId, jobOfferId])
}

model JobTask {
  jobOfferId     Int
  taskId         Int
  jobOffer       JobOffer @relation(fields: [jobOfferId], references: [id])
  task           Task     @relation(fields: [taskId], references: [id])
  @@id([jobOfferId, taskId])
}

model UserTask {
  userId         Int
  taskId         Int
  completionDate DateTime?
  status         String?  // Optional, example: 'Completed', 'In Progress'
  user           User     @relation(fields: [userId], references: [id])
  task           Task     @relation(fields: [taskId], references: [id])
  @@id([userId, taskId])
}

enum Role {
  CANDIDATE
  ADMIN
  RECRUITER
}
